{"version":3,"sources":["api.js","localStorage.js","store/slices/loginSlice.js","components/LoginForm.js","components/LoadingSpinner.js","containers/PageContainer.js","pages/LoginPage.js","store/slices/registerSlice.js","components/RegisterForm.js","utils.js","pages/RegistrationPage.js","store/slices/usersSlice.js","components/UsersTable/index.js","components/UsersTable/components/UserRow.js","components/UserCreateUpdateModal/index.js","pages/MainPage.js","App.js","store/index.js","index.js"],"names":["axios","defaults","baseURL","API","login","email","password","post","register","getUsers","page","get","createUser","data","deleteUser","userId","delete","updateUser","put","storeUserLocally","token","storage","window","localStorage","setItem","removeLocalUserData","removeItem","isUserStoredLocally","Boolean","getItem","loginSlice","createSlice","initialState","isLoading","error","name","reducers","loginRequest","state","loginSuccess","action","payload","loginFailure","logoutRequest","actions","ScFormContolsContainer","styled","div","LoginForm","onSubmit","registeredData","useState","setEmail","setPassword","rememberLogin","setRememberLogin","Form","e","preventDefault","Group","onChange","target","value","className","controlId","Label","Control","defaultValue","type","placeholder","Button","variant","style","marginRight","htmlFor","id","to","role","ScSpinnerContainer","LoadingSpinner","Spinner","animation","ScPageContainer","Container","PageContainer","children","LoginPage","history","useHistory","dispatch","useDispatch","loginData","useSelector","showAlert","setShowAlert","useEffect","timeoutId","setTimeout","push","clearTimeout","storeLocally","a","response","user","padding","Alert","registerSlice","message","registerRequest","registerSuccess","registerFailure","RegisterForm","errors","setErrors","vErrors","validationErrors","length","validateLogin","Object","keys","isInvalid","Feedback","RegistrationPage","registrationData","newUser","usersSlice","total","usersRequest","usersSuccess","total_pages","userSuccess","usersFailure","userDelete","filter","userUpdate","newState","currentUserIdx","findIndex","currentUser","usersClearOnUnmount","UsersTable","onCreateUser","Table","striped","bordered","hover","display","justifyContent","textAlign","onClick","ScButtonContainer","UserRow","React","forwardRef","ref","onUserDelete","onUserEdit","first_name","last_name","job","avatar","src","alt","height","width","UserEditModal","show","onClose","userData","setName","setJob","Modal","onHide","Header","closeButton","Title","Body","InputGroup","Text","FormControl","aria-label","aria-describedby","Footer","MainPage","authorized","users","setPage","showUserModal","setShowUserModal","currentUserId","setCurrentUserId","usersResponse","observer","useRef","lastUserRowRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","handleCloseUserModal","handleEditUser","handleDeleteUser","status","Error","fluid","marginBottom","map","idx","UserCreateUpdateModal","updatedUser","find","App","isAuthorized","isStoredLocally","basename","exact","path","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00686a82.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://reqres.in/api/\";\n\nconst login = (email, password) =>\n  axios.post(\"/login\", {\n    email,\n    password,\n  });\n\nconst register = (email, password) =>\n  axios.post(\"/register\", {\n    email,\n    password,\n  });\n\nconst getUsers = (page) => axios.get(`/users?page=${page}`);\n\nconst createUser = (data) =>\n  axios.post(\"/users\", {\n    ...data,\n  });\n\nconst deleteUser = (userId) => axios.delete(`users/${userId}`);\n\nconst updateUser = (userId, data) =>\n  axios.put(`users/${userId}`, {\n    ...data,\n  });\n\nconst API = {\n  login,\n  register,\n  getUsers,\n  createUser,\n  deleteUser,\n  updateUser,\n};\n\nexport default API;\n","export const storeUserLocally = (email, password, token) => {\n  const storage = window.localStorage;\n\n  storage.setItem(\"email\", email);\n  storage.setItem(\"password\", password);\n  storage.setItem(\"reqresToken\", token);\n};\n\nexport const getLocalUserData = () => {\n  const storage = window.localStorage;\n\n  const user = {\n    email: storage.getItem(\"email\"),\n    password: storage.getItem(\"password\"),\n    token: storage.getItem(\"reqresToken\"),\n  };\n\n  return user;\n};\n\nexport const removeLocalUserData = () => {\n  const storage = window.localStorage;\n\n  storage.removeItem(\"email\");\n  storage.removeItem(\"reqresToken\");\n  storage.removeItem(\"password\");\n};\n\nexport const isUserStoredLocally = () => {\n  return Boolean(window.localStorage.getItem(\"reqresToken\"));\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"../../api\";\nimport {\n  storeUserLocally,\n  isUserStoredLocally,\n  removeLocalUserData,\n} from \"../../localStorage\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  token: \"\",\n  isLoading: false,\n  error: null,\n};\n\nconst loginSlice = createSlice({\n  initialState,\n  name: \"login\",\n  reducers: {\n    loginRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.token = action.payload.token;\n      state.email = action.payload.email;\n      state.password = action.payload.password;\n    },\n    loginFailure(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logoutRequest(state) {\n      state.email = \"\";\n      state.password = \"\";\n      state.token = \"\";\n      state.isLoading = false;\n      state.error = null;\n    },\n  },\n});\n\nexport const { loginRequest, loginSuccess, loginFailure, logoutRequest } =\n  loginSlice.actions;\n\nexport const login = (email, password, storeLocally) => async (dispatch) => {\n  try {\n    dispatch(loginRequest());\n    const response = await API.login(email, password);\n\n    const user = { ...response.data };\n    user.email = email;\n    user.password = password;\n\n    if (storeLocally) {\n      storeUserLocally(user.email, user.password, user.token);\n    }\n\n    dispatch(loginSuccess(user));\n  } catch (error) {\n    dispatch(loginFailure(error.response.data.error));\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    if (isUserStoredLocally()) {\n      removeLocalUserData();\n    }\n    dispatch(logoutRequest());\n  } catch (error) {\n    dispatch(loginFailure(error.message));\n  }\n};\n\nexport default loginSlice.reducer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ScFormContolsContainer = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n\n  > div {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 150px;\n  }\n\n  #rememberMeCheckbox {\n    width: 20px;\n  }\n`;\n\nconst LoginForm = ({ onSubmit, registeredData }) => {\n  const [email, setEmail] = useState(registeredData.email || \"\");\n  const [password, setPassword] = useState(registeredData.password || \"\");\n  const [rememberLogin, setRememberLogin] = useState(false);\n\n  const handleSubmitLogin = (e) => {\n    e.preventDefault();\n\n    onSubmit(email, password, rememberLogin);\n  };\n\n  return (\n    <Form onSubmit={handleSubmitLogin}>\n      <Form.Group\n        onChange={(e) => {\n          setEmail(e.target.value);\n        }}\n        className=\"mb-3\"\n        controlId=\"formBasicEmail\"\n      >\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          defaultValue={email}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </Form.Group>\n\n      <Form.Group\n        onChange={(e) => {\n          setPassword(e.target.value);\n        }}\n        className=\"mb-3\"\n        controlId=\"formBasicPassword\"\n      >\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          defaultValue={password}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Group>\n\n      <ScFormContolsContainer>\n        <Button variant=\"primary\" type=\"submit\" style={{ marginRight: \"30px\" }}>\n          Login\n        </Button>\n        <div>\n          <label htmlFor=\"rememberMeCheckbox\">Remember me</label>\n          <input\n            onChange={(e) => setRememberLogin(e.target.value)}\n            value={rememberLogin}\n            id=\"rememberMeCheckbox\"\n            type=\"checkbox\"\n          ></input>\n        </div>\n        <Link to=\"/register\">\n          <Button variant=\"link\" role=\"button\">\n            Register\n          </Button>\n        </Link>\n      </ScFormContolsContainer>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ScSpinnerContainer = styled.div`\n  position: sticky !important;\n  display: flex;\n  justify-content: center;\n  width: 200px;\n  position: absolute;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  text-align: center;\n  z-index: 100;\n  top: 50%;\n`;\n\nconst LoadingSpinner = () => (\n  <ScSpinnerContainer>\n    <Spinner animation=\"grow\" />\n    <Spinner animation=\"grow\" />\n    <Spinner animation=\"grow\" />\n  </ScSpinnerContainer>\n);\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"react-bootstrap\";\n\nconst ScPageContainer = styled(Container)`\n  max-width: 75%;\n  margin-top: 10%;\n\n  & input {\n    width: 400px;\n  }\n`;\n\nconst PageContainer = ({ children, ...props }) => {\n  return <ScPageContainer>{children}</ScPageContainer>;\n};\n\nexport default PageContainer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { login } from \"../store/slices/loginSlice\";\nimport { Alert } from \"react-bootstrap\";\n\nimport LoginForm from \"../components/LoginForm\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nimport PageContainer from \"../containers/PageContainer\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const loginData = useSelector((state) => state.login);\n  const registeredData = useSelector((state) => {\n    return {\n      email: state.register.email,\n      password: state.register.password,\n    };\n  });\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    if (loginData.token) {\n      setShowAlert(true);\n      const timeoutId = setTimeout(() => {\n        setShowAlert(false);\n        history.push(\"/\");\n      }, 1000);\n\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [loginData.token, history]);\n\n  const handleSubmitLogin = (email, password, rememberLogin) => {\n    dispatch(login(email, password, rememberLogin));\n  };\n\n  return (\n    <PageContainer>\n      <h3>Login</h3>\n\n      <LoginForm onSubmit={handleSubmitLogin} registeredData={registeredData} />\n\n      <div style={{ padding: \"30px 0px\" }}>\n        <p>Login mock data </p>\n        <p>email: eve.holt@reqres.in</p>\n        <p>password: cityslicka</p>\n      </div>\n\n      {loginData.isLoading && <LoadingSpinner />}\n\n      {loginData.error && <Alert variant=\"danger\">{loginData.error}</Alert>}\n\n      {showAlert && <Alert variant=\"success\">Successfully logged in!</Alert>}\n    </PageContainer>\n  );\n};\n\nexport default LoginPage;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"../../api\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  token: \"\",\n  isLoading: false,\n  error: null,\n  message: \"\",\n  id: 0,\n};\n\nconst registerSlice = createSlice({\n  initialState,\n  name: \"register\",\n  reducers: {\n    registerRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    registerSuccess(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.token = action.payload.token;\n      state.email = action.payload.email;\n      state.password = action.payload.password;\n      state.id = action.payload.id;\n    },\n    registerFailure(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { registerRequest, registerSuccess, registerFailure } =\n  registerSlice.actions;\n\nexport const register = (email, password) => async (dispatch) => {\n  try {\n    dispatch(registerRequest());\n    const response = await API.register(email, password);\n\n    const newUser = { ...response.data };\n    newUser.email = email;\n    newUser.password = password;\n\n    dispatch(registerSuccess(newUser));\n  } catch (error) {\n    dispatch(registerFailure(error.response.data.error));\n  }\n};\n\nexport default registerSlice.reducer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { validateLogin } from \"../utils\";\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const vErrors = validateLogin(email, password);\n\n    if (Object.keys(vErrors).length) {\n      setErrors(vErrors);\n      return;\n    }\n\n    onSubmit(email, password);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group\n        onChange={(e) => {\n          setEmail(e.target.value);\n        }}\n        className=\"mb-3\"\n        controlId=\"formBasicEmail\"\n      >\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          isInvalid={!!errors.email}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.email}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group\n        onChange={(e) => {\n          setPassword(e.target.value);\n        }}\n        className=\"mb-3\"\n        controlId=\"formBasicPassword\"\n      >\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          isInvalid={!!errors.password}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.password}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\" style={{ marginRight: \"30px\" }}>\n        Register\n      </Button>\n\n      <Link to=\"/login\">\n        <Button variant=\"link\" role=\"button\">\n          Go back to login page\n        </Button>\n      </Link>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","export const validateLogin = (email, password) => {\n  const validationErrors = {};\n\n  if (!email.length) validationErrors.email = \"Email is required\";\n\n  if (password.length < 6) validationErrors.password = \"Password is too small\";\n\n  if (!password.length) validationErrors.password = \"Password is required\";\n\n  return validationErrors;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../store/slices/registerSlice\";\n\nimport RegisterForm from \"../components/RegisterForm\";\nimport PageContainer from \"../containers/PageContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst RegistrationPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const registrationData = useSelector((state) => state.register);\n  const handleSubmitRegistration = (email, password) => {\n    dispatch(register(email, password));\n  };\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    if (registrationData.id) {\n      setShowAlert(true);\n      const timeoutId = setTimeout(() => {\n        setShowAlert(false);\n        history.push(\"/login\");\n      }, 1000);\n\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [registrationData.id, history]);\n\n  return (\n    <PageContainer>\n      <h3>Register</h3>\n      <RegisterForm onSubmit={handleSubmitRegistration} />\n      <div style={{ padding: \"30px 0px\" }}>\n        <p>Register mock data </p>\n        <p>email: eve.holt@reqres.in</p>\n        <p>password: pistol</p>\n      </div>\n\n      {registrationData.error && (\n        <Alert variant=\"danger\">{registrationData.error}</Alert>\n      )}\n\n      {showAlert && (\n        <Alert variant=\"success\">You have been successfully registered!</Alert>\n      )}\n\n      {registrationData.isLoading && <LoadingSpinner />}\n    </PageContainer>\n  );\n};\n\nexport default RegistrationPage;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport API from \"../../api\";\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  error: null,\n  total: 0,\n};\n\nconst usersSlice = createSlice({\n  initialState,\n  name: \"users\",\n  reducers: {\n    usersRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    usersSuccess(state, action) {\n      state.data = [...state.data, ...action.payload.data];\n      state.isLoading = false;\n      state.error = null;\n      state.total = action.payload.total_pages;\n    },\n    userSuccess(state, action) {\n      state.data = [...state.data, ...action.payload];\n      state.isLoading = false;\n      state.error = null;\n    },\n    usersFailure(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    userDelete(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.data = state.data.filter((user) => user.id !== action.payload);\n    },\n    userUpdate(state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const newState = [...state.data];\n      const currentUserIdx = newState.findIndex(\n        (user) => user.id === action.payload.id\n      );\n      const currentUser = newState[currentUserIdx];\n\n      newState[currentUserIdx] = {\n        ...currentUser,\n        ...action.payload,\n      };\n\n      state.data = newState;\n    },\n    usersClearOnUnmount(state) {\n      state.data = [];\n      state.isLoading = false;\n      state.error = null;\n      state.total = 0;\n    },\n  },\n});\n\nexport const {\n  usersRequest,\n  userSuccess,\n  usersSuccess,\n  usersFailure,\n  userDelete,\n  userUpdate,\n  usersClearOnUnmount,\n} = usersSlice.actions;\n\nexport const getUsers = (page) => async (dispatch) => {\n  try {\n    dispatch(usersRequest());\n    const usersResponse = await API.getUsers(page);\n    dispatch(usersSuccess(usersResponse.data));\n  } catch (error) {\n    dispatch(usersFailure(error.message));\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  try {\n    dispatch(usersRequest());\n    const usersResponse = await API.deleteUser(userId);\n    if (usersResponse.status === 204) {\n      dispatch(userDelete(userId));\n    } else {\n      throw new Error(\"There was an error deleting user\");\n    }\n  } catch (error) {\n    dispatch(usersFailure(error.message));\n  }\n};\n\nexport const updateUser = (userId, userData) => async (dispatch) => {\n  try {\n    dispatch(usersRequest());\n    const usersResponse = await API.updateUser(userId, userData);\n\n    const updatedUser = usersResponse.data;\n    updatedUser.first_name = updatedUser.name;\n    updatedUser.id = userId;\n\n    dispatch(userUpdate(updatedUser));\n  } catch (error) {\n    dispatch(usersFailure(error.message));\n  }\n};\n\nexport const createUser = (userData) => async (dispatch) => {\n  try {\n    dispatch(usersRequest());\n    const usersResponse = await API.createUser(userData);\n\n    const newUser = usersResponse.data;\n    newUser.first_name = newUser.name;\n\n    dispatch(userSuccess([newUser]));\n  } catch (error) {\n    dispatch(usersFailure(error.message));\n  }\n};\n\nexport const clearUsers = () => async (dispatch) => {\n  dispatch(usersClearOnUnmount());\n};\n\nexport default usersSlice.reducer;\n","import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\nimport \"./style.css\";\n\nconst UsersTable = ({ children, onCreateUser, ...props }) => {\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"th\">id</th>\n          <th className=\"th\">Email</th>\n          <th className=\"th\">First Name</th>\n          <th className=\"th\">Last Name</th>\n          <th className=\"th\">Job</th>\n          <th className=\"th\">Avatar</th>\n          <th className=\"th\">\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                style={{ textAlign: \"center\" }}\n                onClick={() => onCreateUser()}\n                className=\"user-button\"\n                variant=\"primary\"\n              >\n                Create user\n              </Button>\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>{children}</tbody>\n    </Table>\n  );\n};\n\nexport default UsersTable;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ScButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  .user-button {\n    width: 100px;\n  }\n\n  .user-button:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst UserRow = React.forwardRef(({ user, onUserDelete, onUserEdit }, ref) => {\n  return (\n    <tr ref={ref}>\n      <td>{user.id}</td>\n      <td>{user.email || \"No email\"}</td>\n      <td>{user.first_name}</td>\n      <td>{user.last_name || \"No last name\"}</td>\n      <td>{user.job || \"no job\"}</td>\n      <td>\n        {user.avatar ? (\n          <img\n            src={user.avatar}\n            alt={`${user.first_name} ${user.last_name} avatar`}\n            height=\"50px\"\n            width=\"50px\"\n          />\n        ) : (\n          \"no avatar\"\n        )}\n      </td>\n      <td>\n        <ScButtonContainer>\n          <Button\n            onClick={() => onUserEdit(user.id)}\n            className=\"user-button\"\n            variant=\"primary\"\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => onUserDelete(user.id)}\n            className=\"user-button\"\n            variant=\"danger\"\n          >\n            Delete\n          </Button>\n        </ScButtonContainer>\n      </td>\n    </tr>\n  );\n});\n\nexport default UserRow;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\n// fix for header closeButton prop styles bug\nimport \"./style.css\";\n\nconst UserEditModal = ({ show, onClose, onSubmit, userData, userId }) => {\n  const [name, setName] = useState(userData.first_name || \"\");\n  const [job, setJob] = useState(userData.job || \"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const validationErrors = {};\n    if (!name) {\n      validationErrors.name = \"Name is required\";\n    }\n    if (name.length > 10) {\n      validationErrors.name = \"Name can't be longer than 10 chars\";\n    }\n    if (job.length > 10) {\n      validationErrors.job = \"Job description can't be longer than 10 chars\";\n    }\n    setErrors(validationErrors);\n  }, [name, job]);\n\n  const handleSubmit = () => {\n    if (errors.length) return;\n\n    onSubmit({ name, job });\n  };\n\n  return (\n    <>\n      <Modal show={show} onHide={onClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{userId ? \"Edit user\" : \"Add new user\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\n              {userId ? \"Edit user\" : \"Add new user\"}\n            </InputGroup.Text>\n            <FormControl\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              aria-label=\"Default\"\n              aria-describedby=\"inputGroup-sizing-default\"\n              isInvalid={!!errors.name}\n            />\n            <FormControl.Feedback type=\"invalid\">\n              {errors.name}\n            </FormControl.Feedback>\n          </InputGroup>\n          <br />\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-default\">\n              New job\n            </InputGroup.Text>\n            <FormControl\n              aria-label=\"Default\"\n              aria-describedby=\"inputGroup-sizing-default\"\n              onChange={(e) => setJob(e.target.value)}\n              value={job}\n              isInvalid={!!errors.job}\n            />\n            <FormControl.Feedback type=\"invalid\">\n              {errors.job}\n            </FormControl.Feedback>\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmit}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default UserEditModal;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getUsers,\n  deleteUser,\n  updateUser,\n  createUser,\n  usersClearOnUnmount,\n} from \"../store/slices/usersSlice\";\nimport { logout } from \"../store/slices/loginSlice\";\n\nimport { Alert, Button } from \"react-bootstrap\";\n\nimport PageContainer from \"../containers/PageContainer\";\nimport UsersTable from \"../components/UsersTable\";\nimport UserRow from \"../components/UsersTable/components/UserRow\";\nimport UserCreateUpdateModal from \"../components/UserCreateUpdateModal\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst MainPage = ({ authorized }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n  const [page, setPage] = useState(1);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(null);\n\n  useEffect(() => {\n    dispatch(getUsers(page));\n  }, [dispatch, page]);\n\n  const observer = useRef();\n  const lastUserRowRef = useCallback(\n    (node) => {\n      if (users.isLoading) return;\n\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n\n      observer.current = new IntersectionObserver((entries) => {\n        if (\n          entries[0].isIntersecting &&\n          page < users.total &&\n          users.total !== 0\n        ) {\n          setPage((prevPage) => prevPage + 1);\n        }\n      });\n\n      if (node) {\n        observer.current.observe(node);\n      }\n    },\n    [users.isLoading, page, users.total]\n  );\n\n  const handleSubmitUserModal = (data) => {\n    if (currentUserId) {\n      dispatch(updateUser(currentUserId, data));\n    } else {\n      dispatch(createUser(data));\n    }\n\n    handleCloseUserModal();\n  };\n\n  const handleCloseUserModal = () => {\n    setShowUserModal(false);\n    setCurrentUserId(null);\n  };\n\n  const handleEditUser = (userId = null) => {\n    setShowUserModal(true);\n    setCurrentUserId(userId);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    dispatch(usersClearOnUnmount());\n    history.push(\"/login\");\n  };\n\n  if (!authorized) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <PageContainer fluid>\n      {users.isLoading && <LoadingSpinner />}\n\n      <div\n        style={{\n          display: \"flex\",\n          marginBottom: \"20px\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button onClick={handleLogout}>Logout</Button>\n      </div>\n\n      <UsersTable onCreateUser={handleEditUser}>\n        {users.data.map((user, idx, users) => {\n          if (idx + 1 === users.length) {\n            return (\n              <UserRow\n                ref={lastUserRowRef}\n                key={user.id}\n                user={user}\n                onUserDelete={handleDeleteUser}\n                onUserEdit={handleEditUser}\n              />\n            );\n          } else {\n            return (\n              <UserRow\n                key={user.id}\n                user={user}\n                onUserDelete={handleDeleteUser}\n                onUserEdit={handleEditUser}\n              />\n            );\n          }\n        })}\n      </UsersTable>\n\n      {showUserModal && (\n        <UserCreateUpdateModal\n          show={showUserModal}\n          onClose={handleCloseUserModal}\n          onSubmit={handleSubmitUserModal}\n          userData={users.data.find((user) => user.id === currentUserId) || {}}\n          userId={currentUserId}\n        />\n      )}\n\n      {users.error && <Alert variant=\"danger\">{users.error}</Alert>}\n    </PageContainer>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegistrationPage from \"./pages/RegistrationPage\";\nimport MainPage from \"./pages/MainPage\";\n\nimport { isUserStoredLocally } from \"./localStorage\";\n\nfunction App() {\n  const isAuthorized = useSelector((state) => Boolean(state.login.token));\n  const isStoredLocally = isUserStoredLocally();\n\n  return (\n    <Router basename=\"/lifeIt-test-task\">\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage authorized={isAuthorized || isStoredLocally} />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegistrationPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport loginSlice from \"./slices/loginSlice\";\nimport registerSlice from \"./slices/registerSlice\";\nimport usersSlice from \"./slices/usersSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    users: usersSlice,\n    register: registerSlice,\n    login: loginSlice,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}